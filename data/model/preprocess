#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import pickle

import numpy as np


class DataPreprocessor:
    """
    Read model data from text tables and save as binary.

    """
    def __init__(self, ic, outliers=None):
        self.ic = ic
        self.outliers = outliers

    def read_table(self, name, skip_outliers=False):
        """
        Read a tabular data file, optionally skipping outlier rows.

        """
        with open('{}_{}.dat'.format(self.ic, name)) as f:
            if self.outliers is not None and skip_outliers:
                x = [l.split() for n, l in enumerate(f)
                     if n not in self.outliers]
            else:
                x = [l.split() for l in f]

        return np.array(x, dtype=float).squeeze()

    def save(self):
        """
        Save data to a dict of numpy arrays.

        """
        data = {name: self.read_table(name, skip_outliers=True)
                for name in ('design', 'mult', 'v2', 'v3')}
        data['cent'] = self.read_table('cent')
        with open('{}.pkl'.format(self.ic), 'wb') as f:
            pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)


def main():
    DataPreprocessor('glb', outliers=(0, 3)).save()
    DataPreprocessor('kln', outliers=(0, 3)).save()
    DataPreprocessor('glb-validation').save()


if __name__ == "__main__":
    main()
